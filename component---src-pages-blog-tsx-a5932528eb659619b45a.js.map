{"version":3,"file":"component---src-pages-blog-tsx-a5932528eb659619b45a.js","mappings":"2KAGA,IAgBMA,EAAkB,SAAC,GAAD,IACtBC,EADsB,EACtBA,QACAC,EAFsB,EAEtBA,YACAC,EAHsB,EAGtBA,gBACAC,EAJsB,EAItBA,UAJsB,OAMtB,eACEC,IAAG,CACDC,GACAD,EAAAA,EAAAA,IAFC,oBAGqBH,EAHrB,qBAIqBC,EAJrB,iBAQH,QAAC,KAAD,CACEI,GAAG,QACHF,IAAG,CACDG,GACAH,EAAAA,EAAAA,IAFC,SAGUD,EAHV,gBAOFH,KAKDO,EAAY,8CAGZF,EAAQ,4DAKd,EArDY,SAAC,GAAc,IAAZG,EAAW,EAAXA,KACRP,EAA4C,QAA/BC,EAAwC,QAAvBC,EAAgC,QAKnE,MAJa,UAATK,IACDP,EAA4C,OAA/BC,EAAuC,OAAtBC,EAA8B,UAI7D,QAACJ,EAAD,CACEC,QAASQ,EACTP,YAAaA,EACbC,gBAAiBA,EACjBC,UAAWA,KCXjB,IAYMM,GAAOL,EAAAA,EAAAA,IAAH,OAEJM,EAAI,iGAOJC,EAAG,0CAIT,EAzBa,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACX,eAAKR,IAAKK,IACR,cAAIL,IAAKM,GACNE,EAASC,KAAI,SAACL,GAAD,OACZ,cAAIJ,IAAKO,IACP,QAAC,EAAD,CAAKH,KAAMA,Y,4GCHrB,IAeMD,EAAY,2EAKZO,EAAI,6HASJC,EAAY,uEAMZC,EAAG,2DAIT,EAvCa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,UAAWX,EAAlC,EAAkCA,KAAMY,EAAxC,EAAwCA,YAAxC,OACX,mBAASjB,IAAKU,IACZ,QAAC,KAAD,CAAMR,GAAIW,EAAMb,IAAKG,IACnB,cAAIH,IAAKW,GAAeG,KAE1B,QAAC,IAAD,CAAMN,SAAUH,KAChB,QAAC,KAAD,CAAMH,GAAIW,EAAMb,IAAKG,IACnB,QAAC,EAAAe,EAAD,CAAaH,OAAOI,EAAAA,EAAAA,GAASJ,GAAQK,IAAKJ,EAAWhB,IAAKY,MAE5D,QAAC,KAAD,CAAMV,GAAIW,EAAMb,IAAKG,IACnB,iBAAIc,MCXV,IAqBMI,EAAQ,4EAMd,EA3Bc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACZ,eAAKtB,IAAKqB,GACPC,EAAMb,KACL,oBACEc,KACEC,YAAeX,EAFnB,EAEmBA,KAAMC,EAFzB,EAEyBA,MAAOC,EAFhC,EAEgCA,MAAOC,EAFvC,EAEuCA,UAAWX,EAFlD,EAEkDA,KAAMY,EAFxD,EAEwDA,YAFxD,OAKE,QAAC,EAAD,CACEJ,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,UAAWA,EACXX,KAAMA,EACNY,YAAaA,S,UCyBvB,EArCsB,SAAC,GAAD,IAEGK,EAFH,EACpBG,KACEC,kBAAqBJ,MAFH,OAKpB,QAAC,IAAD,MACE,4BACA,QAAC,EAAD,CAAOA,MAAOA","sources":["webpack://mag-tech-blog/./src/components/tag.tsx","webpack://mag-tech-blog/./src/components/tags.tsx","webpack://mag-tech-blog/./src/components/blog.tsx","webpack://mag-tech-blog/./src/components/blogs.tsx","webpack://mag-tech-blog/./src/pages/blog.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport { css } from '@emotion/react';\n\nconst Tag = ({ name }) => {\n  let [borderColor, backgroundColor, fontColor] = ['black', 'white', 'black'];\n  if (name === 'react') {\n    [borderColor, backgroundColor, fontColor] = ['blue', 'blue', 'white'];\n  }\n\n  return (\n    <TagPresentation\n      tagName={name}\n      borderColor={borderColor}\n      backgroundColor={backgroundColor}\n      fontColor={fontColor}\n    />\n  );\n};\n\nconst TagPresentation = ({\n  tagName,\n  borderColor,\n  backgroundColor,\n  fontColor,\n}) => (\n  <div\n    css={[\n      boxStyle,\n      css`\n        border: 1px solid ${borderColor};\n        background-color: ${backgroundColor};\n      `,\n    ]}\n  >\n    <Link\n      to=\"/blog\"\n      css={[\n        linkStyleOff,\n        css`\n          color: ${fontColor};\n        `,\n      ]}\n    >\n      {tagName}\n    </Link>\n  </div>\n);\n\nconst linkStyleOff = css`\n  text-decoration: none;\n`;\nconst boxStyle = css`\n  padding: 0px 5px;\n  border-radius: 5px;\n`;\n\nexport default Tag;\n","import { css } from '@emotion/react';\nimport Tag from './tag';\n\nconst Tags = ({ tagNames }) => (\n  <div css={tags}>\n    <ul css={list}>\n      {tagNames.map((name) => (\n        <li css={tag}>\n          <Tag name={name} />\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nconst tags = css``;\n\nconst list = css`\n  padding-left: 0;\n  list-style-type: none;\n  display: flex;\n  justify-content: start;\n`;\n\nconst tag = css`\n  margin-right: 1vw;\n`;\n\nexport default Tags;\n","import { Link } from 'gatsby';\nimport { css } from '@emotion/react';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport Tags from './tags';\n\nconst Blog = ({ slug, title, image, image_alt, tags, description }) => (\n  <article css={card}>\n    <Link to={slug} css={linkStyleOff}>\n      <h2 css={headingTitle}>{title}</h2>\n    </Link>\n    <Tags tagNames={tags} />\n    <Link to={slug} css={linkStyleOff}>\n      <GatsbyImage image={getImage(image)} alt={image_alt} css={img} />\n    </Link>\n    <Link to={slug} css={linkStyleOff}>\n      <p>{description}</p>\n    </Link>\n  </article>\n);\n\nconst linkStyleOff = css`\n  color: hsla(0, 0%, 0%, 0.775);\n  text-decoration: none;\n`;\n\nconst card = css`\n  background-color: white;\n  margin: 30px;\n  width: 290px;\n  border: 1px solid red;\n  border-radius: 5px;\n  padding: 30px;\n`;\n\nconst headingTitle = css`\n  margin-top: 0;\n  font-size: 1.7rem;\n  font-weight: bold;\n`;\n\nconst img = css`\n  max-width: 100%;\n  margin-bottom: 2vh;\n`;\nexport default Blog;\n","import { css } from '@emotion/react';\n\nimport Blog from './blog';\n\nconst Blogs = ({ edges }) => (\n  <div css={isFlexed}>\n    {edges.map(\n      ({\n        node: {\n          frontmatter: { slug, title, image, image_alt, tags, description },\n        },\n      }) => (\n        <Blog\n          slug={slug}\n          title={title}\n          image={image}\n          image_alt={image_alt}\n          tags={tags}\n          description={description}\n        />\n      ),\n    )}\n  </div>\n);\n\nconst isFlexed = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport default Blogs;\n","import { VFC } from 'react';\nimport { css } from '@emotion/react';\nimport { graphql } from 'gatsby';\nimport Blogs from '../components/blogs';\nimport Layout from '../components/layout';\n\nconst BlogPage: VFC = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => (\n  <Layout>\n    <div>タグ一覧</div>\n    <Blogs edges={edges} />\n  </Layout>\n);\n\nexport const allBlogs = graphql`\n  query AllBlogs {\n    allMarkdownRemark(\n      sort: { fields: id, order: ASC }\n      filter: { frontmatter: { tags: { in: \"blog\" } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date(formatString: \"YYYY/MM/DD\")\n            description\n            slug\n            tags\n            title\n            image {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPage;\n"],"names":["TagPresentation","tagName","borderColor","backgroundColor","fontColor","css","boxStyle","to","linkStyleOff","name","tags","list","tag","tagNames","map","card","headingTitle","img","slug","title","image","image_alt","description","G","getImage","alt","isFlexed","edges","node","frontmatter","data","allMarkdownRemark"],"sourceRoot":""}