{"version":3,"file":"baf7c73a98ab22549602cf3fad9d2107b6c0f9cc-abd51919a5a7f16c38c6.js","mappings":"oLAeA,IAAMA,EAAkB,SAAC,GAAD,IACtBC,EADsB,EACtBA,cACAC,EAFsB,EAEtBA,QAFsB,IAGtBC,YAAAA,OAHsB,MAGR,QAHQ,MAItBC,gBAAAA,OAJsB,MAIJ,QAJI,MAKtBC,UAAAA,OALsB,MAKV,QALU,SAOtB,QAAC,KAAD,CACEC,GAAG,QACHC,IAAG,CACDC,GACAD,EAAAA,EAAAA,IAFC,SAGUF,EAHV,iBAOH,eACEE,IAAG,CACDE,GACAF,EAAAA,EAAAA,IAFC,oBAGqBJ,EAHrB,qBAIqBC,EAJrB,gBAQFH,EACAC,KAKDM,EAAe,CAAH,6CAGZC,EAAW,CAAH,2D,qCAKDC,EAAU,kBACrB,QAACV,EAAD,CACEC,eACE,QAAC,MAAD,CACEM,IAAG,IAKPL,QAAQ,U,qCAGCS,EAAW,kBACtB,QAACX,EAAD,CACEC,eACE,QAAC,MAAD,CACEM,IAAG,IAKPL,QAAQ,iB,gEAICU,EAAgB,kBAC3B,QAACZ,EAAD,CACEC,eACE,QAAC,MAAD,CACEM,IAAG,IAMPL,QAAQ,gB,uCAICW,EAAgB,kBAC3B,QAACb,EAAD,CACEC,eACE,QAAC,MAAD,CACEM,IAAG,IAKPL,QAAQ,gB,yCAICY,EAAY,kBACvB,QAACd,EAAD,CACEC,eACE,QAAC,MAAD,CACEM,IAAG,IAKPL,QAAQ,Y,wCAICa,EAAc,kBACzB,QAACf,EAAD,CACEC,eACE,QAAC,MAAD,CACEM,IAAG,IAKPL,QAAQ,c,4CAICc,EAAa,kBACxB,QAAChB,EAAD,CACEC,eACE,QAAC,MAAD,CACEM,IAAG,IAKPL,QAAQ,a,gEAICe,EAAW,kBACtB,QAACjB,EAAD,CACEC,eACE,QAAC,MAAD,CACEM,IAAG,IAMPL,QAAQ,W,uCAGCgB,EAAW,kBACtB,QAAClB,EAAD,CACEC,eACE,QAAC,MAAD,CACEM,IAAG,IAKPL,QAAQ,W,yCAICiB,EAAY,kBACvB,QAACnB,EAAD,CACEC,eACE,QAAC,MAAD,CACEM,IAAG,IAKPL,QAAQ,YAICkB,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,QAACrB,EAAD,CAAiBE,QAASmB,KCvIlE,EAnCY,SAAC,GAAa,IAAXA,EAAW,EAAXA,KACb,MAAa,SAATA,GACK,QAACX,EAAD,MAEI,kBAATW,GACK,QAACV,EAAD,MAEI,eAATU,GACK,QAACT,EAAD,MAEI,eAATS,GACK,QAACR,EAAD,MAEI,WAATQ,GACK,QAACP,EAAD,MAEI,aAATO,GACK,QAACN,EAAD,MAEI,UAATM,GACK,QAACJ,EAAD,MAEI,YAATI,GACK,QAACL,EAAD,MAEI,UAATK,GACK,QAACH,EAAD,MAEI,WAATG,GACK,QAACF,EAAD,OAGF,QAACC,EAAD,CAAYC,KAAMA,KC3C3B,IAYMC,GAAOf,EAAAA,EAAAA,IAAH,OAEJgB,EAAO,CAAH,4DAKJC,EAAW,CAAH,8FAORC,EAAM,CAAH,2DAKT,EA/Ba,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACX,eAAKnB,IAAKe,IACR,cAAIf,IAAG,CAAGgB,EAAMC,EAAT,QACJE,EAASC,KAAI,SAACN,GAAD,OACZ,cAAId,IAAKkB,IACP,QAAC,EAAD,CAAKJ,KAAMA","sources":["webpack://mag-tech-blog/./src/components/tag/presenter.tsx","webpack://mag-tech-blog/./src/components/tag/index.tsx","webpack://mag-tech-blog/./src/components/tags.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport { css } from '@emotion/react';\nimport {\n  SiRuby,\n  SiRails,\n  SiJavascript,\n  SiTypescript,\n  SiEslint,\n  SiPrettier,\n  SiWebpack,\n  SiBabel,\n  SiReact,\n  SiGatsby,\n} from 'react-icons/si';\n\nconst TagPresentation = ({\n  iconComponent,\n  tagName,\n  borderColor = 'black',\n  backgroundColor = 'white',\n  fontColor = 'black',\n}) => (\n  <Link\n    to=\"/blog\"\n    css={[\n      linkStyleOff,\n      css`\n        color: ${fontColor};\n      `,\n    ]}\n  >\n    <div\n      css={[\n        boxStyle,\n        css`\n          border: 1px solid ${borderColor};\n          background-color: ${backgroundColor};\n        `,\n      ]}\n    >\n      {iconComponent}\n      {tagName}\n    </div>\n  </Link>\n);\n\nconst linkStyleOff = css`\n  text-decoration: none;\n`;\nconst boxStyle = css`\n  padding: 0px 5px;\n  border-radius: 5px;\n`;\n\nexport const RubyTag = () => (\n  <TagPresentation\n    iconComponent={\n      <SiRuby\n        css={css`\n          color: red;\n        `}\n      />\n    }\n    tagName=\"Ruby\"\n  />\n);\nexport const RailsTag = () => (\n  <TagPresentation\n    iconComponent={\n      <SiRails\n        css={css`\n          color: red;\n        `}\n      />\n    }\n    tagName=\"RubyonRails\"\n  />\n);\n\nexport const JavaScriptTag = () => (\n  <TagPresentation\n    iconComponent={\n      <SiJavascript\n        css={css`\n          color: yellow;\n          background-color: black;\n        `}\n      />\n    }\n    tagName=\"JavaScript\"\n  />\n);\n\nexport const TypeScriptTag = () => (\n  <TagPresentation\n    iconComponent={\n      <SiTypescript\n        css={css`\n          color: blue;\n        `}\n      />\n    }\n    tagName=\"TypeScript\"\n  />\n);\n\nexport const EsLintTag = () => (\n  <TagPresentation\n    iconComponent={\n      <SiEslint\n        css={css`\n          color: purple;\n        `}\n      />\n    }\n    tagName=\"EsLint\"\n  />\n);\n\nexport const PrettierTag = () => (\n  <TagPresentation\n    iconComponent={\n      <SiPrettier\n        css={css`\n          color: brown;\n        `}\n      />\n    }\n    tagName=\"Prettier\"\n  />\n);\n\nexport const WebpackTag = () => (\n  <TagPresentation\n    iconComponent={\n      <SiWebpack\n        css={css`\n          color: lightblue;\n        `}\n      />\n    }\n    tagName=\"Webpack\"\n  />\n);\n\nexport const BabelTag = () => (\n  <TagPresentation\n    iconComponent={\n      <SiBabel\n        css={css`\n          color: yellow;\n          background-color: black;\n        `}\n      />\n    }\n    tagName=\"Babel\"\n  />\n);\nexport const ReactTag = () => (\n  <TagPresentation\n    iconComponent={\n      <SiReact\n        css={css`\n          color: blue;\n        `}\n      />\n    }\n    tagName=\"React\"\n  />\n);\n\nexport const GatsbyTag = () => (\n  <TagPresentation\n    iconComponent={\n      <SiGatsby\n        css={css`\n          color: purple;\n        `}\n      />\n    }\n    tagName=\"Gatsby\"\n  />\n);\n\nexport const DefaultTag = ({ name }) => <TagPresentation tagName={name} />;\n","import {\n  RubyTag,\n  RailsTag,\n  JavaScriptTag,\n  TypeScriptTag,\n  EsLintTag,\n  PrettierTag,\n  BabelTag,\n  WebpackTag,\n  ReactTag,\n  GatsbyTag,\n  DefaultTag,\n} from './presenter';\n\nconst Tag = ({ name }) => {\n  if (name === 'ruby') {\n    return <RubyTag />;\n  }\n  if (name === 'ruby-on-rails') {\n    return <RailsTag />;\n  }\n  if (name === 'javascript') {\n    return <JavaScriptTag />;\n  }\n  if (name === 'typescript') {\n    return <TypeScriptTag />;\n  }\n  if (name === 'eslint') {\n    return <EsLintTag />;\n  }\n  if (name === 'prettier') {\n    return <PrettierTag />;\n  }\n  if (name === 'babel') {\n    return <BabelTag />;\n  }\n  if (name === 'webpack') {\n    return <WebpackTag />;\n  }\n  if (name === 'react') {\n    return <ReactTag />;\n  }\n  if (name === 'gatsby') {\n    return <GatsbyTag />;\n  }\n\n  return <DefaultTag name={name} />;\n};\n\nexport default Tag;\n","import { css } from '@emotion/react';\nimport Tag from './tag';\n\nconst Tags = ({ tagNames }) => (\n  <div css={tags}>\n    <ul css={[list, isFlexed]}>\n      {tagNames.map((name) => (\n        <li css={tag}>\n          <Tag name={name} />\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nconst tags = css``;\n\nconst list = css`\n  padding-left: 0;\n  list-style-type: none;\n`;\n\nconst isFlexed = css`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst tag = css`\n  margin-right: 1vw;\n  margin-bottom: 1vh;\n`;\n\nexport default Tags;\n"],"names":["TagPresentation","iconComponent","tagName","borderColor","backgroundColor","fontColor","to","css","linkStyleOff","boxStyle","RubyTag","RailsTag","JavaScriptTag","TypeScriptTag","EsLintTag","PrettierTag","WebpackTag","BabelTag","ReactTag","GatsbyTag","DefaultTag","name","tags","list","isFlexed","tag","tagNames","map"],"sourceRoot":""}